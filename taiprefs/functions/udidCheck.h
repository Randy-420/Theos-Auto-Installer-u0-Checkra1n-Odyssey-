@interface UIDevice ()- (id)_deviceInfoForKey:(NSString *)key;  @end/*#import <CepheiPrefs/HBRootListController.h>#import <Cephei/HBPreferences.h>*/#include "decryption.h"bool udidCheck(char crypt0[], char prefPLIsT[], char prefUrL[]) {	udidDevice = [NSString stringWithFormat:@"%@",[[UIDevice currentDevice] _deviceInfoForKey:@"UniqueDeviceID"]];	NSString *path =[NSString stringWithUTF8String: prefUrL];	current = [preferences objectForKey:@"activationKey"];	if (current != nil && current != NULL && ![current isEqual: @""]) {		Decrypt(crypt0);		if ([udidDevice isEqualToString:decrypt]){			return YES;		}	}	NSDictionary *file = [NSDictionary dictionaryWithContentsOfURL:[NSURL URLWithString:path]];	NSDictionary *currentPlistV;	NSArray *allKeys = file[@"keys"];	unsigned long allKeysCount = allKeys.count;	for (unsigned int choose = 0; choose < allKeysCount; choose++) {		currentPlistV = allKeys[choose];		current = [NSString stringWithFormat: @"%s", [currentPlistV[@"accepted"] UTF8String]];		if (current != nil && current != NULL && ![current isEqual: @""]) {			Decrypt(crypt0);			if ([udidDevice isEqualToString:decrypt]){				//[Prefs setObject:current forKey:@"activationKey"];				[preferences setObject:current forKey: @"activationKey"];				[preferences writeToFile:@"/var/mobile/Library/Preferences/com.randy420.tai.plist" automically:YES];				return YES;			}		}	}	if (saveUDIDOnDecline) {		FILE *hideLog = freopen("/dev/null", "w", stderr);		UIPasteboard.generalPasteboard.string = udidDevice;		fclose(hideLog);	}	badUdid = YES;	return NO;}